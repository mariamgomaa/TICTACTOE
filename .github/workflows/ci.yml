name: TICTACTOE CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        arch: 'win64_mingw81'

    - name: Install clang-format
      run: choco install llvm -y

    - name: Auto format all .cpp/.h files using clang-format
      run: |
        Get-ChildItem -Recurse -Include *.cpp,*.h | ForEach-Object {
          clang-format -i $_.FullName
        }

    # Commit back formatted files (only works on push, not PRs from forks)
    - name: Commit formatted code
      if: github.ref == 'refs/heads/main'
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git add .
        git diff --cached --quiet || git commit -m "Auto-format code with clang-format"
        git push

    - name: Build project
      run: |
        qmake TicTacToe.pro
        mingw32-make

    - name: Deploy Qt runtime
      run: |
        windeployqt release/TicTacToe.exe

    - name: List built files
      run: Get-ChildItem -Recurse -File | ForEach-Object { $_.FullName }

    - name: Upload built executable
      uses: actions/upload-artifact@v4
      with:
        name: TicTacToeGame
        path: release/**
  deploy:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: TicTacToeGame
        path: ./release

    - name: Package application
      run: |
        # Create installer or package
        Compress-Archive -Path "./release/*" -DestinationPath "TicTacToe-${{ github.sha }}.zip"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
      with:
        files: TicTacToe-${{ github.sha }}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
