name: TICTACTOE CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        arch: 'win64_mingw81'

    - name: Install dependencies (LLVM, CMake, g++)
      run: |
        choco install llvm -y
        choco install cmake -y
        choco install mingw -y

    - name: Auto format all .cpp/.h files using clang-format
      run: |
        Get-ChildItem -Recurse -Include *.cpp,*.h | ForEach-Object {
          clang-format -i $_.FullName
        }

    - name: Commit formatted code
      if: github.ref == 'refs/heads/forformat'
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git add .
        git diff --cached --quiet || git commit -m "Auto-format code with clang-format"
        git push

    - name: Build game project
      run: |
        qmake TicTacToe.pro
        mingw32-make

    - name: Deploy Qt runtime
      run: |
        windeployqt release/TicTacToe.exe

    - name: Upload built executable
      uses: actions/upload-artifact@v4
      with:
        name: TicTacToeGame
        path: release/**

    # ---------- Google Test ----------
    - name: Clone GoogleTest
      run: |
        git clone https://github.com/google/googletest.git
        cd googletest
        cmake -Bbuild -H.
        cmake --build build

    - name: Compile test_tictactoe.cpp
      run: |
        g++ test_tictactoe.cpp -Igoogletest/googletest/include -Igoogletest/googletest -Lgoogletest/build/lib -lgtest -lgtest_main -pthread -o TicTacToeTests.exe

    - name: Run tests
      run: |
        ./TicTacToeTests.exe --gtest_output=xml:test_results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: test_results.xml

  deploy:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: TicTacToeGame
        path: ./release

    - name: Package application
      run: |
        Compress-Archive -Path "./release/*" -DestinationPath "TicTacToe-${{ github.sha }}.zip"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: TicTacToe-${{ github.sha }}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
